worker_processes 1;

events { worker_connections 1024; }
http {
    upstream backend {
        server backend:8080 max_fails=0;
    }
    upstream outcomes {
        server outcomes:80 max_fails=0;
    }
    upstream proxy {
        server outcomes_proxy:5000 max_fails=0;
    }

    server {
        listen 80;
        server_name _;

        location /openmrs {
            proxy_pass http://backend;
        }
        
        location /openmrs/spa {
            return 301 /openmrs/spa/;
        }
        
        location /openmrs/spa/ {
            proxy_pass http://frontend/;
            #proxy_redirect http://$host/ /openmrs/spa/;
        }
        
        location / {
            return 301 https://$host$request_uri;

        }
    }

    server {
        listen [::]:443 ssl;
        listen 443 ssl default;
        server_name __;

        ssl_certificate /etc/nginx/certs/cert.crt;
        #ssl_certificate /etc/nginx/certs/fullchain.pem;

        ssl_certificate_key /etc/nginx/keys/cert.key;

        proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
        proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
        proxy_set_header Host $host; # to forward the original host requested by the client

       absolute_redirect off;

        location / {
            proxy_pass http://frontend.openelis.org;
            proxy_redirect     off;
        }




        location /api/ {
            proxy_pass         https://oe.openelis.org:8443/api/;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }


        location /proxy {
            proxy_pass http://proxy;
            proxy_ssl_verify off;  # Disable SSL verification for upstream
            proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;  # Optional: trusted certs

        }


        location /outcomes {
            return 301 /outcomes/;
        }
        location /outcomes/ {
            proxy_pass http://outcomes;
            proxy_redirect off;
            proxy_ssl_verify off;  # Disable SSL verification for upstream
            proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;  # Optional: trusted certs

        }


    }
}